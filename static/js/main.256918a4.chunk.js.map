{"version":3,"sources":["helpers/registerServiceWorker.js","components/Source.jsx","components/Track.jsx","components/Tracks.jsx","components/TracksActions.jsx","components/TTMList.jsx","helpers/index.js","components/Map.jsx","components/App.jsx","index.js","components/icons/icon.svg"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","SourceContainer","styled","div","_templateObject","Title","h1","_templateObject2","InputWr","_templateObject3","Input","input","_templateObject4","Source","_ref","lat","lon","onChange","handleChangeInput","event","_event$target","target","name","value","numberValue","parseInt","react_default","a","createElement","type","TrackContainer","Track_templateObject","Track","track","id","speed","rotate","uid","handleChangeTrackInput","TracksContainer","Tracks_templateObject","Header","Tracks_templateObject2","Tracks_templateObject3","Tracks","tracks","Tracks_Title","map","components_Track","key","TracksActionContainer","TracksActions_templateObject","TracksAction","onCreateTrackBlank","es_button","shape","icon","htmlType","onClick","TTMListContainer","TTMList_templateObject","TTMList","source","concat","distance","bearing","generateTTMString","p1","LatLon","p2","distanceTo","initialBearingTo","calculateTTM","MapContainer","Map_templateObject","MapComponent","lMap","mapIcon","ais","L","iconUrl","iconSize","iconAnchor","markers","tracksLayer","layerGroup","_this$props","this","props","onMapClick","setView","tileLayer","attribution","addTo","on","paintTracks","nextProps","clearMarkers","off","destroyMap","remove","forEach","markerLayer","marker","clearLayers","iconType","rotationAngle","push","addLayer","_this2","normalizedTracks","reduce","res","item","normalizeTracks","tracksList","painTrack","Component","AppContainer","App_templateObject","sourceInit","trackInit","shortid","App","_useState","useState","_useState2","Object","slicedToArray","setSource","_useState3","_useState4","setTracks","addTrack","newTracks","toConsumableArray","components_Source","newSource","objectSpread","TracksActions","lastTrack","length","emptyTrack","components_Tracks","t","newTrack","components_TTMList","Map","coordObj","latlng","lng","document","querySelector","ReactDOM","render","components_App","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.256918a4.chunk.js","sourcesContent":["// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n)\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location)\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n      console.log('process.env.PUBLIC_URL:', process.env.PUBLIC_URL, 'swUrl:', swUrl)\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl)\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          )\r\n        })\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl)\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.')\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.')\r\n            }\r\n          }\r\n        }\r\n      }\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error)\r\n    })\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload()\r\n          })\r\n        })\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl)\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.')\r\n    })\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister()\r\n    })\r\n  }\r\n}\r\n","// @flow\r\nimport React from 'react'\r\nimport styled from 'styled-components'\r\nimport type { CoordsNameType } from '../helpers/types'\r\n\r\nconst SourceContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n`\r\n\r\nconst Title = styled.h1`\r\n  font-weight: 400;\r\n  margin: 0 0 5px 0;\r\n`\r\n\r\nconst InputWr = styled.div`\r\n  display: flex;\r\n  width: 380px;\r\n`\r\n\r\nconst Input = styled.input`\r\n  width: 50%;\r\n  font-size: 18px;\r\n  border: 1px solid #ccc;\r\n  padding: 8px 12px;\r\n  border-right: 0;\r\n  border-radius: 30px 0 0 30px;\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n\r\n  &:last-child {\r\n    border-right: 1px solid #ccc;\r\n    border-radius: 0 30px 30px 0;\r\n  }\r\n`\r\n\r\ntype Props = {\r\n  lat: number,\r\n  lon: number,\r\n  onChange: (name: CoordsNameType, value: number) => void,\r\n}\r\n\r\nconst Source = ({ lat, lon, onChange }: Props) => {\r\n  const handleChangeInput = event => {\r\n    const { name, value }: { name: CoordsNameType, value: string } = event.target\r\n    const numberValue: number = parseInt(value, 10)\r\n    onChange(name, numberValue)\r\n  }\r\n\r\n  return (\r\n    <SourceContainer>\r\n      <Title>Radar coordinates</Title>\r\n      <InputWr>\r\n        <Input type=\"text\" name=\"lat\" value={lat} onChange={handleChangeInput} />\r\n        <Input type=\"text\" name=\"lon\" value={lon} onChange={handleChangeInput} />\r\n      </InputWr>\r\n    </SourceContainer>\r\n  )\r\n}\r\n\r\nexport default Source\r\n","// @flow\r\nimport React from 'react'\r\nimport styled from 'styled-components'\r\nimport type { TrackType } from '../helpers/types'\r\n\r\nconst TrackContainer = styled.div`\r\n  width: 100%;\r\n  input {\r\n    width: 20%;\r\n    border: 1px solid #ccc;\r\n    padding: 3px 4px;\r\n    border-right: 0;\r\n    border-bottom: 0;\r\n\r\n    &:last-child {\r\n      border-right: 1px solid #ccc;\r\n    }\r\n  }\r\n\r\n  &:last-child {\r\n    input {\r\n      border-bottom: 1px solid #ccc;\r\n    }\r\n  }\r\n`\r\n\r\ntype Props = {\r\n  track: TrackType,\r\n  onChange: (id: string, name: string, value: string) => void,\r\n}\r\n\r\nconst Track = ({ track, onChange }: Props) => {\r\n  const { id, lat, lon, speed, rotate, uid } = track\r\n\r\n  const handleChangeTrackInput = event => {\r\n    const {\r\n      target: { name, value },\r\n    } = event\r\n    onChange(id, name, value)\r\n  }\r\n  return (\r\n    <TrackContainer>\r\n      <input type=\"text\" name=\"lat\" value={lat} onChange={handleChangeTrackInput} />\r\n      <input type=\"text\" name=\"lon\" value={lon} onChange={handleChangeTrackInput} />\r\n      <input type=\"text\" name=\"speed\" value={speed} onChange={handleChangeTrackInput} />\r\n      <input type=\"text\" name=\"rotate\" value={rotate} onChange={handleChangeTrackInput} />\r\n      <input type=\"text\" name=\"uid\" value={uid} onChange={handleChangeTrackInput} />\r\n    </TrackContainer>\r\n  )\r\n}\r\n\r\nexport default Track\r\n","// @flow\r\nimport React from 'react'\r\nimport styled from 'styled-components'\r\nimport type { TrackType } from '../helpers/types'\r\nimport Track from './Track'\r\n\r\nconst TracksContainer = styled.div``\r\n\r\nconst Header = styled.div`\r\n  display: flex;\r\n`\r\n\r\nconst Title = styled.div`\r\n  width: 20%;\r\n  font-weight: 600;\r\n  padding-left: 4px;\r\n`\r\n\r\ntype Props = {\r\n  tracks: TrackType[],\r\n  onChange: (id: string, name: string, value: string) => void,\r\n}\r\n\r\nconst Tracks = ({ tracks, onChange }: Props) => {\r\n  return (\r\n    <TracksContainer>\r\n      <Header>\r\n        <Title>Lat</Title>\r\n        <Title>Lon</Title>\r\n        <Title>Speed</Title>\r\n        <Title>Heading</Title>\r\n        <Title>Target number</Title>\r\n      </Header>\r\n      {tracks.map((track: TrackType) => (\r\n        <Track key={track.id} track={track} onChange={onChange} />\r\n      ))}\r\n    </TracksContainer>\r\n  )\r\n}\r\n\r\nexport default Tracks\r\n","// @flow\r\nimport React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button } from 'antd'\r\n\r\nconst TracksActionContainer = styled.div`\r\n  margin: 24px 0 12px;\r\n`\r\n\r\ntype Props = {\r\n  onCreateTrackBlank: () => void,\r\n}\r\n\r\nconst TracksAction = ({ onCreateTrackBlank }: Props) => {\r\n  return (\r\n    <TracksActionContainer>\r\n      <Button\r\n        type=\"primary\"\r\n        shape=\"round\"\r\n        icon=\"plus\"\r\n        htmlType=\"button\"\r\n        onClick={onCreateTrackBlank}\r\n      >\r\n        Add track\r\n      </Button>\r\n    </TracksActionContainer>\r\n  )\r\n}\r\n\r\nexport default TracksAction\r\n","// @flow\r\nimport React from 'react'\r\nimport styled from 'styled-components'\r\nimport type { CoordsType, TrackType } from '../helpers/types'\r\nimport { calculateTTM, generateTTMString } from '../helpers'\r\n\r\nconst TTMListContainer = styled.div`\r\n  margin: 24px 0 0 0;\r\n  background: #efefef;\r\n  padding: 8px;\r\n`\r\n\r\ntype Props = {\r\n  tracks: TrackType[],\r\n  source: CoordsType,\r\n}\r\n\r\nconst TTMList = ({ tracks, source }: Props) => {\r\n  return (\r\n    <TTMListContainer>\r\n      {tracks.map((track: TrackType) => (\r\n        <div key={`ttm-${track.id}`}>{generateTTMString(calculateTTM(track, source))}</div>\r\n      ))}\r\n    </TTMListContainer>\r\n  )\r\n}\r\n\r\nexport default TTMList\r\n","// @flow\r\nimport LatLon from 'geodesy/latlon-vincenty'\r\nimport type { CoordsType, TrackType, TTMType } from './types'\r\n\r\nexport const normalizeTracks = (tracks: TrackType[]): {} =>\r\n  tracks.reduce((res, item) => {\r\n    if (!res[item.uid]) {\r\n      res[item.uid] = [item]\r\n    } else {\r\n      res[item.uid].push(item)\r\n    }\r\n    return res\r\n  }, {})\r\n\r\nexport const generateTTMString = ({ distance, bearing, speed, rotate, uid }: TTMType): string => {\r\n  return `$RATTM,${uid},${distance},${bearing},T,${speed},${rotate},T,4.25,320.8,N,L,,M*0D`\r\n}\r\n\r\nexport const calculateTTM = (track: TrackType, source: CoordsType): TTMType => {\r\n  const p1 = new LatLon(track.lat, track.lon)\r\n  const p2 = new LatLon(source.lat, source.lon)\r\n\r\n  const distance = p1.distanceTo(p2) / 1000\r\n  const bearing = p2.initialBearingTo(p1)\r\n\r\n  return {\r\n    uid: track.uid,\r\n    speed: track.speed,\r\n    rotate: track.rotate,\r\n    distance,\r\n    bearing,\r\n  }\r\n}\r\n","// @flow\r\nimport React, { Component } from 'react'\r\nimport styled from 'styled-components'\r\nimport forEach from 'lodash/forEach'\r\nimport L from 'leaflet'\r\nimport 'leaflet-rotatedmarker'\r\nimport type { CoordsType, TrackType } from '../helpers/types'\r\nimport icon from './icons/icon.svg'\r\nimport { normalizeTracks } from '../helpers'\r\n\r\nconst MapContainer = styled.div`\r\n  width: 100%;\r\n  height: 600px;\r\n  position: relative;\r\n\r\n  #map {\r\n    width: 100%;\r\n    height: 100%;\r\n    z-index: 1;\r\n  }\r\n`\r\n\r\ntype Props = {\r\n  tracks: TrackType[],\r\n  source: CoordsType,\r\n  onMapClick: (event: Object) => void,\r\n}\r\n\r\nclass MapComponent extends Component<Props> {\r\n  lMap = {}\r\n\r\n  mapIcon = {\r\n    ais: L.icon({\r\n      iconUrl: icon,\r\n      iconSize: [16, 22],\r\n      iconAnchor: [8, 11],\r\n    }),\r\n  }\r\n\r\n  markers = {}\r\n\r\n  tracksLayer: Object = L.layerGroup()\r\n\r\n  componentDidMount() {\r\n    const { tracks, source, onMapClick } = this.props\r\n    this.lMap = L.map('map').setView(source, 10)\r\n\r\n    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\r\n      attribution: 'Delta Maps',\r\n    }).addTo(this.lMap)\r\n\r\n    this.tracksLayer.addTo(this.lMap)\r\n\r\n    this.lMap.on('click', onMapClick)\r\n\r\n    if (tracks) {\r\n      this.paintTracks(tracks)\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps: Props) {\r\n    const { onMapClick } = nextProps\r\n    this.clearMarkers()\r\n    this.paintTracks(nextProps.tracks)\r\n    this.lMap.off('click', onMapClick)\r\n    this.lMap.on('click', onMapClick)\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.destroyMap()\r\n  }\r\n\r\n  destroyMap() {\r\n    this.clearMarkers()\r\n    this.lMap.off()\r\n    if (this.lMap) this.lMap.remove()\r\n  }\r\n\r\n  clearMarkers() {\r\n    forEach(this.markers, markerLayer => {\r\n      markerLayer.forEach(marker => marker.off())\r\n    })\r\n    this.markers = {}\r\n    this.tracksLayer.clearLayers()\r\n  }\r\n\r\n  painTrack(track: TrackType, uid: string, iconType: string) {\r\n    const marker = L.marker([track.lat, track.lon], {\r\n      rotationAngle: track.rotate,\r\n      icon: this.mapIcon[iconType],\r\n    })\r\n\r\n    marker.id = track.id\r\n\r\n    if (!this.markers[uid]) {\r\n      this.markers[uid] = [marker]\r\n    } else {\r\n      this.markers[uid].push(marker)\r\n    }\r\n\r\n    this.tracksLayer.addLayer(marker)\r\n  }\r\n\r\n  paintTracks(tracks: TrackType[]) {\r\n    this.clearMarkers()\r\n    const normalizedTracks = normalizeTracks(tracks)\r\n\r\n    forEach(normalizedTracks, (tracksList, uid) => {\r\n      tracksList.forEach(track => {\r\n        const iconType = 'ais'\r\n        this.painTrack(track, uid, iconType)\r\n      })\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <MapContainer>\r\n        <div id=\"map\" />\r\n      </MapContainer>\r\n    )\r\n  }\r\n}\r\n\r\nexport default MapComponent\r\n","// @flow\r\nimport React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport * as shortid from 'shortid'\r\nimport type { CoordsType, CoordsNameType, TrackType } from '../helpers/types'\r\nimport Source from './Source'\r\nimport Tracks from './Tracks'\r\nimport TracksAction from './TracksActions'\r\nimport TTMList from './TTMList'\r\nimport Map from './Map'\r\n\r\nconst AppContainer = styled.div`\r\n  padding: 24px;\r\n`\r\n\r\nconst sourceInit: CoordsType = {\r\n  lat: 40.39343817966825,\r\n  lon: -73.9879041228013,\r\n}\r\n\r\nconst trackInit: TrackType[] = [\r\n  {\r\n    id: shortid.generate(),\r\n    lat: 40.31875441395524,\r\n    lon: -73.77966225350048,\r\n    speed: 7,\r\n    rotate: 45,\r\n    uid: '1',\r\n  },\r\n]\r\n\r\nconst App = () => {\r\n  const [source, setSource] = useState(sourceInit)\r\n  const [tracks, setTracks] = useState(trackInit)\r\n\r\n  const addTrack = (track: TrackType): void => {\r\n    const newTracks = [...tracks, track]\r\n    setTracks(newTracks)\r\n  }\r\n\r\n  const handleSourceChange = (name: CoordsNameType, value: number): void => {\r\n    const newSource: CoordsType = { ...source, lon: value }\r\n    setSource(newSource)\r\n  }\r\n\r\n  const handleTrackChange = (id: string, name: string, value: string | number): void => {\r\n    const newTracks = tracks.map(t => {\r\n      const newTrack = { ...t }\r\n      if (newTrack.id === id) {\r\n        newTrack[name] = value\r\n      }\r\n      return newTrack\r\n    })\r\n    setTracks(newTracks)\r\n  }\r\n\r\n  const handleCreateTrackBlank = (): void => {\r\n    const lastTrack: TrackType = tracks[tracks.length - 1]\r\n    const emptyTrack: TrackType = { ...lastTrack, id: shortid.generate() }\r\n    addTrack(emptyTrack)\r\n  }\r\n\r\n  const handleCreateNewTrack = (coordObj: Object): void => {\r\n    const { latlng } = coordObj\r\n    const lastTrack = tracks[tracks.length - 1]\r\n    const newTrack: TrackType = {\r\n      ...lastTrack,\r\n      id: shortid.generate(),\r\n      lat: latlng.lat,\r\n      lon: latlng.lng,\r\n    }\r\n\r\n    addTrack(newTrack)\r\n  }\r\n\r\n  return (\r\n    <AppContainer>\r\n      <Source lat={source.lat} lon={source.lon} onChange={handleSourceChange} />\r\n      <TracksAction onCreateTrackBlank={handleCreateTrackBlank} />\r\n      <Tracks tracks={tracks} onChange={handleTrackChange} />\r\n      <TTMList tracks={tracks} source={source} />\r\n      <Map tracks={tracks} source={source} onMapClick={handleCreateNewTrack} />\r\n    </AppContainer>\r\n  )\r\n}\r\n\r\nexport default App\r\n","/* eslint react/jsx-filename-extension: off */\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport 'antd/dist/antd.css'\nimport registerServiceWorker from './helpers/registerServiceWorker'\nimport App from './components/App'\n\nconst target = document.querySelector('#root')\n\nReactDOM.render(<App />, target)\n\nregisterServiceWorker()\n","module.exports = __webpack_public_path__ + \"static/media/icon.99f7434a.svg\";"],"sourceRoot":""}